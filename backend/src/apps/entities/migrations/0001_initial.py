# Generated by Django 5.2.7 on 2025-10-12 21:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id_usuario', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('cep', models.CharField(max_length=10)),
                ('nivel_de_acesso', models.CharField(choices=[('U', 'Usuario Comum'), ('A', 'Administrador'), ('G', 'Gerente Ecoponto')], db_column='NIVEL_DE_ACESSO', default='C', max_length=1)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'USUARIO',
            },
        ),
        migrations.CreateModel(
            name='Ecoponto',
            fields=[
                ('id_ecoponto', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('cnpj', models.CharField(max_length=20, unique=True)),
                ('cep', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Ecoponto',
                'verbose_name_plural': 'Ecopontos',
                'db_table': 'ECOPONTO',
            },
        ),
        migrations.CreateModel(
            name='EmpresaParceira',
            fields=[
                ('id_empresa', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('cnpj', models.CharField(max_length=20, unique=True)),
                ('nome', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'empresa parceira',
                'verbose_name_plural': 'empresas parceiras',
                'db_table': 'EMPRESA_PARCEIRA',
            },
        ),
        migrations.CreateModel(
            name='ValorReciclagem',
            fields=[
                ('id_valor_reciclagem', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('valor_pontos', models.FloatField()),
                ('data', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Valor da Reciclagem',
                'verbose_name_plural': 'Valores da Reciclagem',
                'db_table': 'VALOR_RECICLAGEM',
            },
        ),
        migrations.CreateModel(
            name='Carteira',
            fields=[
                ('id_usuario', models.OneToOneField(db_column='ID_USUARIO', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='carteira_usuario', serialize=False, to='entities.usuario')),
                ('pontos', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Carteira do usuario',
                'verbose_name_plural': 'Carteiras dos usuarios',
                'db_table': 'CARTEIRA',
            },
        ),
        migrations.CreateModel(
            name='Senha',
            fields=[
                ('id_usuario', models.OneToOneField(db_column='ID_USUARIO', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='senha_usuario', serialize=False, to='entities.usuario')),
                ('senha', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Senha do usuario',
                'verbose_name_plural': 'Senhas dos usuarios',
                'db_table': 'SENHA',
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='id_ecoponto_fav',
            field=models.ForeignKey(blank=True, db_column='ID_ECOPONTO_FAV', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecopontos_favoritos', to='entities.ecoponto'),
        ),
        migrations.AddField(
            model_name='ecoponto',
            name='id_usuario',
            field=models.ForeignKey(blank=True, db_column='ID_USUARIO', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuario_representante', to='entities.usuario'),
        ),
        migrations.CreateModel(
            name='Cupom',
            fields=[
                ('id_cupom', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('tipo_de_cupom', models.CharField(choices=[('DESCONTO_PORCENTAGEM', 'Porcentagem de Desconto'), ('DESCONTO_DIRETO', 'Desconto em dinheiro'), ('BRINDE', 'Brinde')], db_column='TIPO_DE_CUPOM', default='DESCONTO_PORCENTAGEM', max_length=255)),
                ('valor', models.IntegerField()),
                ('custo_pontos', models.IntegerField()),
                ('hash_validacao', models.CharField(max_length=255)),
                ('data_inicio', models.DateTimeField()),
                ('data_validade', models.DateTimeField()),
                ('id_empresa_parceira', models.ForeignKey(db_column='ID_EMPRESA_PARCEIRA', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empresa_parceira', to='entities.empresaparceira')),
            ],
            options={
                'verbose_name': 'cupom',
                'verbose_name_plural': 'cupons',
                'db_table': 'CUPOM',
            },
        ),
        migrations.CreateModel(
            name='PostBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_post', models.CharField(max_length=100)),
                ('titulo', models.CharField(max_length=200)),
                ('texto', models.TextField()),
                ('imagens', models.TextField()),
                ('data_criacao', models.DateTimeField(editable=False)),
                ('data_ultima_edicao', models.DateTimeField()),
                ('id_autor', models.ForeignKey(db_column='ID_AUTOR', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuario_autor', to='entities.usuario')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'db_table': 'POST_BLOG',
            },
        ),
        migrations.CreateModel(
            name='TransacoesCupom',
            fields=[
                ('id_transacao', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('valor_pontos', models.IntegerField()),
                ('data', models.DateTimeField()),
                ('id_cupom', models.ForeignKey(db_column='ID_CUPOM', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cupom_usuario', to='entities.cupom')),
                ('id_usuario', models.ForeignKey(db_column='ID_USUARIO', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacoes_cupom_usuario', to='entities.usuario')),
            ],
            options={
                'verbose_name': 'transação de cupom',
                'verbose_name_plural': 'transações de cupons',
                'db_table': 'TRANSACOES_CUPOM',
            },
        ),
        migrations.CreateModel(
            name='Reciclagem',
            fields=[
                ('id_reciclagem', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('valor_pontos', models.IntegerField()),
                ('peso', models.FloatField(max_length=300)),
                ('data', models.DateTimeField()),
                ('hash_validacao', models.CharField(max_length=255)),
                ('id_ecoponto', models.ForeignKey(db_column='ID_ECOPONTO', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecoponto', to='entities.ecoponto')),
                ('id_usuario', models.ForeignKey(db_column='ID_USUARIO', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reciclagem_usuario', to='entities.usuario')),
                ('id_valor_reciclagem', models.ForeignKey(db_column='ID_VALOR_RECICLAGEM', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valor_reciclagem', to='entities.valorreciclagem')),
            ],
            options={
                'verbose_name': 'reciclagem',
                'verbose_name_plural': 'reciclagens',
                'db_table': 'RECICLAGEM',
            },
        ),
    ]
