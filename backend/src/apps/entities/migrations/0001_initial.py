# Generated by Django 5.2.7 on 2025-10-20 01:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PartnerCompany',
            fields=[
                ('company_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('cnpj', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Partner company',
                'verbose_name_plural': 'Partner companies',
                'db_table': 'PARTNER_COMPANY',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('zip_code', models.CharField(max_length=10)),
                ('access_level', models.CharField(choices=[('U', 'Regular User'), ('A', 'Administrator'), ('M', 'Recycling Point Manager')], db_column='ACCESS_LEVEL', default='C', max_length=1)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'USER',
            },
        ),
        migrations.CreateModel(
            name='RecyclingPoint',
            fields=[
                ('recycling_point_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('cnpj', models.CharField(max_length=20, unique=True)),
                ('zip_code', models.CharField(max_length=10)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'verbose_name': 'Recycling point',
                'verbose_name_plural': 'Recycling points',
                'db_table': 'RECYCLING_POINT',
            },
        ),
        migrations.CreateModel(
            name='RecyclingValue',
            fields=[
                ('recycling_value_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('points_value', models.FloatField()),
                ('date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Recycling value',
                'verbose_name_plural': 'Recycling values',
                'db_table': 'RECYCLING_VALUE',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('coupon_type', models.CharField(choices=[('PERCENTAGE_DISCOUNT', 'Discount Percentage'), ('DIRECT_DISCOUNT', 'Discount in Cash'), ('GIFT', 'Gift')], db_column='COUPON_TYPE', default='PERCENTAGE_DISCOUNT', max_length=255)),
                ('value', models.IntegerField()),
                ('points_cost', models.IntegerField()),
                ('validation_hash', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('expiring_date', models.DateTimeField()),
                ('partner_company_id', models.ForeignKey(db_column='PARTNER_COMPANY_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='partner_company', to='entities.partnercompany')),
            ],
            options={
                'verbose_name': 'coupon',
                'verbose_name_plural': 'coupons',
                'db_table': 'COUPON',
            },
        ),
        migrations.CreateModel(
            name='Password',
            fields=[
                ('user_id', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_password', serialize=False, to='entities.user')),
                ('password', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'User password',
                'verbose_name_plural': 'User passwords',
                'db_table': 'PASSWORD',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('user_id', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='WALLET_USER', serialize=False, to='entities.user')),
                ('points_balance', models.IntegerField()),
            ],
            options={
                'verbose_name': 'User wallet',
                'verbose_name_plural': 'Users wallet',
                'db_table': 'WALLET',
            },
        ),
        migrations.CreateModel(
            name='CouponsTransactions',
            fields=[
                ('transaction_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('points_value', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('coupon_id', models.ForeignKey(db_column='COUPON_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_coupon', to='entities.coupon')),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_coupon_transation', to='entities.user')),
            ],
            options={
                'verbose_name': 'coupon transaction',
                'verbose_name_plural': 'coupon transactions',
                'db_table': 'COUPONS_TRANSACTIONS',
            },
        ),
        migrations.CreateModel(
            name='PostBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('images', models.TextField()),
                ('created_at', models.DateTimeField(editable=False)),
                ('last_edition_date', models.DateTimeField()),
                ('author_id', models.ForeignKey(db_column='AUTHOR_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_user', to='entities.user')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'db_table': 'POST_BLOG',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='fav_recycling_point_id',
            field=models.ForeignKey(blank=True, db_column='FAV_RECYCLING_POINT_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='favorite_recycling_point', to='entities.recyclingpoint'),
        ),
        migrations.AddField(
            model_name='recyclingpoint',
            name='user_id',
            field=models.ForeignKey(blank=True, db_column='USER_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='representative_user', to='entities.user'),
        ),
        migrations.CreateModel(
            name='Recycling',
            fields=[
                ('recycling_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('points_value', models.IntegerField()),
                ('weight', models.FloatField(max_length=300)),
                ('date', models.DateTimeField()),
                ('validation_hash', models.CharField(max_length=255)),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_recycling', to='entities.user')),
                ('recycling_point_id', models.ForeignKey(db_column='RECYCLING_POINT_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recycling_point', to='entities.recyclingpoint')),
                ('recycling_value_id', models.ForeignKey(db_column='RECYCLING_VALUE_ID', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recycling_value', to='entities.recyclingvalue')),
            ],
            options={
                'verbose_name': 'Recycling',
                'verbose_name_plural': 'Recyclings',
                'db_table': 'RECYCLING',
            },
        ),
        migrations.CreateModel(
            name='WalletHistory',
            fields=[
                ('history_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('operation', models.CharField(choices=[('RECYCLING', 'Recycling'), ('COUPON_TRANSACTION', 'Bought coupon'), ('EARN_POINTS', 'Earned points')], db_column='operation', default='RECYCLING', max_length=255)),
                ('value', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('user_id', models.ForeignKey(db_column='USER_ID', on_delete=django.db.models.deletion.CASCADE, related_name='WALLET_HISTORY_USER', to='entities.user')),
            ],
            options={
                'verbose_name': 'Wallet history',
                'verbose_name_plural': 'Wallet history',
                'db_table': 'WALLET_HISTORY',
            },
        ),
    ]
